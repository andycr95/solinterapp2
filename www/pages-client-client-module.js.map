{"version":3,"sources":["webpack:///./src/app/pages/client/client.module.ts","webpack:///./src/app/pages/client/client.page.html","webpack:///./src/app/pages/client/client.page.scss","webpack:///./src/app/pages/client/client.page.ts"],"names":[],"mappings":"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","file":"pages-client-client-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule,ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ClientPage } from './client.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ClientPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ClientPage]\n})\nexport class ClientPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar color=\\\"primary\\\">\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-back-button defaultHref=\\\"/schedulesvisits\\\"></ion-back-button>\\n    </ion-buttons>\\n    \\n    <ion-searchbar\\n      mode=\\\"ios\\\"\\n      show-cancel-button=\\\"true\\\"\\n      cancel-button-text=\\\"Cancelar\\\"\\n      (ionChange)=\\\"onSearch($event)\\\"\\n      autocomplete=\\\"off\\\"\\n      autocorrect=\\\"on\\\"\\n      animated=\\\"true\\\" \\n      spellcheck=\\\"true\\\"\\n      type=\\\"text\\\"\\n      ionBlur=\\\"\\\"\\n      color=\\\"ligth\\\"\\n      placeholder=\\\"Buscar cliente\\\">\\n    </ion-searchbar>\\n  \\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-fab-button color=\\\"light\\\" (click)=\\\"addClient()\\\">\\n        <ion-icon name=\\\"add\\\" color=\\\"primary\\\"></ion-icon>\\n      </ion-fab-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n    \\n    \\n    <div text-center *ngIf=\\\"showSpinner;\\\">\\n        <ion-spinner name=\\\"lines\\\"></ion-spinner>\\n    </div>\\n\\n    <div *ngIf=\\\"showListClient;\\\">\\n        <div *ngIf=\\\"listAllClient && listAllClient.length > 0\\\">\\n            <ion-card class=\\\"card-schedules\\\" *ngFor=\\\"let client of listAllClient\\\">\\n                <ion-card-header>\\n                   <ion-card-title>Cliente: {{ client.client_name }}</ion-card-title>\\n                    <ion-card-subtitle>Nit: {{ client.client_nit }}\\n                        <div style=\\\"float:right\\\">\\n                            <ion-chip>\\n                              <ion-icon mode=\\\"ios\\\" (click)=\\\"editClient(client)\\\" name=\\\"create\\\" color=\\\"primary\\\" class=\\\"icon-circle-small-e\\\"></ion-icon>\\n                              <ion-icon mode=\\\"ios\\\" (click)=\\\"deleteClient(client.idclient)\\\"  name=\\\"trash\\\" color=\\\"primary\\\" class=\\\"icon-circle-small-d\\\"></ion-icon>\\n                            </ion-chip>\\n                        </div>\\n                    </ion-card-subtitle>\\n                </ion-card-header>\\n                <ion-card-content>\\n                    Contacto: {{ client.client_contact }} <br> \\n                    Celular: {{ client.client_phone }} \\n                    <div style=\\\"float:right\\\">\\n                        <ion-chip>\\n                            <ion-label>Detalle</ion-label>\\n                            <ion-icon (click)=\\\"verClient(client)\\\"  color=\\\"primary\\\" mode=\\\"ios\\\" name=\\\"search\\\"></ion-icon>\\n                        </ion-chip>\\n                    </div>\\n                </ion-card-content>\\n              </ion-card>\\n        </div>\\n    </div>\\n\\n      <div *ngIf=\\\"showClient;\\\">\\n        <ion-card>\\n            <ion-card-header>\\n                  <ion-card-subtitle>Nit: {{listClient.client_nit}}</ion-card-subtitle>\\n                  <ion-card-title>Empresa: {{listClient.client_name}}</ion-card-title>\\n              </ion-card-header>\\n              <ion-card-content>\\n                 Direcci√≥n: {{listClient.client_address}} <br>\\n                 Telefono: {{listClient.client_phone}} <br>\\n                 Correo: {{listClient.client_email}}  <br> \\n                 Contacto: {{listClient.client_contact}}  <br> \\n               </ion-card-content>\\n          </ion-card>\\n       </div>\\n      </ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NsaWVudC9jbGllbnQucGFnZS5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ClientService } from '../../services/client.service';\nimport { TypeclientService } from '../../services/typeclient.service';\nimport { AlertController, ToastController, ModalController } from '@ionic/angular';\nimport { ConfigService } from '../../services/config-service';\nimport { ClientModalComponent } from '../client-modal/client-modal.component';\n\n@Component({\n  selector: 'app-client',\n  templateUrl: './client.page.html',\n  styleUrls: ['./client.page.scss'],\n})\nexport class ClientPage implements OnInit {\n\n  public showSpinner = false\n  public showListClient = false\n  public showFormClient = false\n  public showFormClientV=false\n  public btnRegister = false\n  public btnUpdate = false\n  public showUpdateImg = false\n  public listAllClient : any\n  public listTypeClient : any\n  public listClient:any\n  public showClient=false\n \n\n  constructor(\n    public Modalctrl: ModalController,\n    private clientService: ClientService,\n    private typeclientService: TypeclientService,\n    public alertController: AlertController,\n    public toastController: ToastController,\n    public config: ConfigService\n  ){}\n\n  ngOnInit()\n  {\n    this.getClients()\n    this.getTypeClients()\n  }\n\n  getTypeClients()\n  {\n    this.typeclientService.getTypeClients().subscribe((res:any) => {\n      this.listTypeClient = res\n    })\n  }\n\n  getClients()\n  {\n    this.showSpinner = true\n     this.clientService.getClients().subscribe((res:any) => {\n        this.showListClient = true\n        this.listAllClient =res\n        this.showSpinner = false\n     })\n  }\n\n  async addClient()\n  {\n    let modal = await this.Modalctrl.create({\n      component: ClientModalComponent,\n      componentProps: {\n      }\n    });\n    modal.onDidDismiss().then((res) => {\n      if (res.data !== null) {\n        this.getClients();\n      }\n    });\n    \n    return await modal.present();\n  }\n\n  async editClient(client:any)\n  {\n    let modal = await this.Modalctrl.create({\n      component: ClientModalComponent,\n      componentProps: {\n        id: client.idclient,\n        nit: client.client_nit,\n        name: client.client_name,\n        address: client.client_address,\n        phone: client.client_phone,\n        email: client.client_email,\n        contact: client.client_contact,\n        typeclient: client.clientype_clientypeid,\n        imageclient:client.client_image,\n        imagetype:client.imagetype\n      }\n    });\n    modal.onDidDismiss().then((res) => {\n      if (res.data !== null) {\n        this.getClients();\n      }\n    });\n    \n    return await modal.present();\n  }\n\n  verClient(client:any)\n  {\n    this.showSpinner = true\n    this.showUpdateImg = false\n    this.showListClient = false\n    this.showClient = true\n    this.listClient =  client \n    this.showSpinner = false\n    this.btnUpdate = false\n    this.btnRegister = false\n    \n  }\n\n  resetForm(form: any)\n  {\n    if(form)\n    {\n      form.reset()\n    }\n  }\n\n  onSearch(event:any)\n  {\n    this.showSpinner = true\n    this.showFormClient = false\n    this.showListClient = true\n    const data = {\n      name : event.target.value\n    }\n    this.clientService.searchsClients(data)\n    .subscribe( (res:any) => {\n        if(res.status == true)\n        {\n          if(res.clients.length > 0)\n          {\n            this.listAllClient = res.clients\n            this.showSpinner = false\n          }\n          else\n          {\n            this.presentToast(this.config.getMessage().searchsClient.message)\n            this.showSpinner = false\n          }\n        }\n      })\n  }\n\n  async deleteClient(id: string) \n  {\n    const alert = await this.alertController.create({\n      header: 'Est√° seguro de eliminar?',\n      buttons: [\n        {\n          text: 'No',\n          role: 'cancel',\n          cssClass: 'secondary',\n          handler: (blah) => {}\n        }, {\n          text: 'Si',\n          handler: () => \n          {\n            this.clientService.deleteClient(id)\n            .subscribe( (res:any) => {\n              this.getClients()\n            })\n          }\n        }\n      ]\n    })\n    await alert.present();\n  }\n\n  async presentToast(message:any) {\n    const toast = await this.toastController.create({\n      message: message,\n      position: 'top',\n      duration: 2000,\n      animated: true,\n      color: \"danger\"\n    })\n    toast.present()\n  }\n}\n"],"sourceRoot":""}