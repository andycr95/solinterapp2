{"version":3,"sources":["webpack:///./src/app/pages/product/product.module.ts","webpack:///./src/app/pages/product/product.page.html","webpack:///./src/app/pages/product/product.page.scss","webpack:///./src/app/pages/product/product.page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAyC;AACM;AACmB;AACX;AAEV;AAEA;AAE7C,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,yDAAW;KACvB;CACF,CAAC;AAYF;IAAA;IAAgC,CAAC;IAApB,iBAAiB;QAV7B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,0DAAW;gBACX,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;aAC9B;YACD,YAAY,EAAE,CAAC,yDAAW,CAAC;SAC5B,CAAC;OACW,iBAAiB,CAAG;IAAD,wBAAC;CAAA;AAAH;;;;;;;;;;;;AC1B9B,w5BAAw5B,kGAAkG,kOAAkO,cAAc,gCAAgC,YAAY,oMAAoM,6BAA6B,0qBAA0qB,+sD;;;;;;;;;;;ACAjqE,+DAA+D,mJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAb;AACc;AACE;AACJ;AACuB;AAOrF;IAeE,qBACU,cAA8B,EAC/B,eAAgC,EAChC,MAAqB,EACpB,WAAwB,EACzB,eAAgC;QAJ/B,mBAAc,GAAd,cAAc,CAAgB;QAC/B,oBAAe,GAAf,eAAe,CAAiB;QAChC,WAAM,GAAN,MAAM,CAAe;QACpB,gBAAW,GAAX,WAAW,CAAa;QACzB,oBAAe,GAAf,eAAe,CAAiB;QAlBlC,gBAAW,GAAG,KAAK;QACnB,oBAAe,GAAG,KAAK;QACvB,gBAAW,GAAG,KAAK;QACnB,cAAS,GAAG,KAAK;QACjB,oBAAe,GAAG,KAAK;IAiB3B,CAAC;IAEJ,8BAAQ,GAAR;IACA,CAAC;IA1BU,WAAW;QALvB,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;YACvB,qGAAkC;;SAEnC,CAAC;yCAiB0B,wEAAc;YACd,8DAAe;YACxB,sEAAa;YACP,0DAAW;YACR,8DAAe;OApB9B,WAAW,CA6BvB;IAAD,kBAAC;CAAA;AA7BuB","file":"pages-product-product-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule ,ReactiveFormsModule } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProductPage } from './product.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProductPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    IonicModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [ProductPage]\n})\nexport class ProductPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\"> \\n          <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n      </ion-buttons>\\n      <ion-title>Gesti√≥n de productos</ion-title>\\n\\n      <ion-buttons slot=\\\"end\\\">\\n          <ion-fab-button color=\\\"danger\\\" (click)=\\\"addProduct()\\\">\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-fab-button>\\n      </ion-buttons>\\n      </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n\\n  <ion-searchbar\\n        mode=\\\"ios\\\"\\n        show-cancel-button=\\\"true\\\"\\n        cancel-button-text=\\\"Cancelar\\\"\\n        (ionChange)=\\\"onSearch($event)\\\"\\n        autocomplete=\\\"off\\\"\\n        autocorrect=\\\"on\\\"\\n        animated=\\\"true\\\" \\n        spellcheck=\\\"true\\\"\\n        type=\\\"text\\\"\\n        ionBlur=\\\"\\\"\\n        placeholder=\\\"Buscar producto\\\">\\n   </ion-searchbar>\\n\\n   <div text-center *ngIf=\\\"showSpinner;\\\">\\n     <ion-spinner name=\\\"lines\\\"></ion-spinner>\\n   </div>\\n\\n  <div *ngIf=\\\"showListProduct;\\\">\\n    <div *ngIf=\\\"listAllProducts && listAllProducts.length > 0\\\">\\n            <ion-list *ngFor=\\\"let pro of listAllProducts\\\">\\n                <ion-list-header>\\n                    <ion-label>\\n                      {{ pro.nombre }} <ion-badge color=\\\"danger\\\"> {{ pro.tipo }} </ion-badge>\\n                    </ion-label>\\n                </ion-list-header>\\n                <ion-item>\\n                    \\n                    <ion-label>\\n                          {{ pro.precio | currency:'$' }}\\n                    </ion-label>\\n                    <ion-tab-button (click)=\\\"editProduct(pro)\\\">\\n                    <ion-icon name=\\\"md-create\\\" color=\\\"danger\\\"></ion-icon>\\n                    <ion-label color=\\\"dark\\\">Editar</ion-label>\\n                    </ion-tab-button>\\n        \\n                    <ion-tab-button (click)=\\\"deleteProduct(pro.idproducto)\\\">\\n                        <ion-icon name=\\\"md-trash\\\" color=\\\"danger\\\"></ion-icon>\\n                        <ion-label color=\\\"dark\\\">Eliminar</ion-label>\\n                    </ion-tab-button>\\n                </ion-item>\\n            </ion-list>\\n    </div>\\n   </div>\\n\\n   <form *ngIf=\\\"showFormProduct;\\\" [formGroup]=\\\"registerProductForm\\\" (ngSubmit)=\\\"registerProduct()\\\">\\n    <ion-item>\\n         <ion-icon name=\\\"md-document\\\"></ion-icon>\\n         <ion-label>Producto</ion-label>\\n         <ion-input formControlName=\\\"name\\\" autocomplete=\\\"off\\\" type=\\\"text\\\"></ion-input>\\n         <input type=\\\"hidden\\\" formControlName=\\\"idproducto\\\" >\\n    </ion-item>\\n\\n     <ion-item *ngIf=\\\"name.hasError('required') && name.touched\\\">\\n       <p>* El nombre del producto es requerido!</p>\\n     </ion-item>\\n\\n     <br><br>\\n       \\n    <ion-item>\\n       <ion-icon name=\\\"md-contact\\\"></ion-icon>\\n       <ion-label>Precio</ion-label>\\n       <ion-input formControlName=\\\"price\\\" autocomplete=\\\"off\\\" type=\\\"number\\\"></ion-input>\\n     </ion-item>\\n\\n     <ion-item *ngIf=\\\"price.hasError('required') && price.touched\\\">\\n      <p>* El precio es requerido!</p>\\n    </ion-item>\\n\\n    <br><br>\\n     \\n     <ion-item>\\n         <ion-icon name=\\\"md-people\\\"></ion-icon>\\n         <ion-label>Catergoria</ion-label>\\n         <ion-input formControlName=\\\"category\\\" autocomplete=\\\"off\\\" type=\\\"text\\\"></ion-input>\\n     </ion-item>\\n\\n     <ion-item *ngIf=\\\"category.hasError('required') && category.touched\\\">\\n       <p>*La categoria es requerida!</p>\\n     </ion-item>\\n\\n     <br><br>\\n     <ion-button  *ngIf=\\\"btnRegister\\\" [disabled]=\\\"!registerProductForm.valid\\\" expand=\\\"block\\\" fill=\\\"solid\\\" color=\\\"danger\\\" type=\\\"submit\\\">\\n           <ion-label class=\\\"textcapitalize\\\">Acceptar</ion-label>\\n     </ion-button>\\n\\n     <ion-button *ngIf=\\\"btnUpdate\\\" expand=\\\"block\\\" fill=\\\"solid\\\" color=\\\"danger\\\" type=\\\"submit\\\">\\n       <ion-label class=\\\"textcapitalize\\\">Editar</ion-label>\\n     </ion-button>\\n   </form> \\n</ion-content>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3Byb2R1Y3QvcHJvZHVjdC5wYWdlLnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ProductService } from '../../services/product.service';\nimport { ToastController, AlertController } from '@ionic/angular';\nimport { ConfigService } from '../../services/config-service';\nimport { FormGroup, FormBuilder, AbstractControl, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-product',\n  templateUrl: './product.page.html',\n  styleUrls: ['./product.page.scss'],\n})\nexport class ProductPage implements OnInit {\n\n  public showSpinner = false\n  public showListProduct = false\n  public btnRegister = false\n  public btnUpdate = false\n  public showFormProduct = false\n  public listAllProducts: any\n  public registerProductForm : FormGroup\n  public idProductDelete: any\n\n  public name:AbstractControl\n  public price:AbstractControl\n  public category:AbstractControl\n \n  constructor(\n    private productService: ProductService,\n    public toastController: ToastController,\n    public config: ConfigService,\n    private formBuilder: FormBuilder,\n    public alertController: AlertController) \n    {\n\n     }\n\n  ngOnInit() {\n  }\n\n\n}\n"],"sourceRoot":""}