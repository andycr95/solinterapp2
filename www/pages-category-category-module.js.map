{"version":3,"sources":["webpack:///./src/app/pages/category/category.module.ts","webpack:///./src/app/pages/category/category.page.html","webpack:///./src/app/pages/category/category.page.scss","webpack:///./src/app/pages/category/category.page.ts"],"names":[],"mappings":"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","file":"pages-category-category-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule,ReactiveFormsModule  } from '@angular/forms';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { CategoryPage } from './category.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: CategoryPage\n  }\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ReactiveFormsModule,\n    RouterModule.forChild(routes)\n  ],\n  declarations: [CategoryPage]\n})\nexport class CategoryPageModule {}\n","module.exports = \"<ion-header>\\n  <ion-toolbar>\\n      <ion-buttons slot=\\\"start\\\"> \\n          <ion-back-button defaultHref=\\\"/home\\\"></ion-back-button>\\n      </ion-buttons>\\n      <ion-title>Gesti√≥n de materiales</ion-title>\\n\\n      <ion-buttons slot=\\\"end\\\">\\n          <ion-fab-button color=\\\"danger\\\" (click)=\\\"addCategory()\\\">\\n          <ion-icon name=\\\"add\\\"></ion-icon>\\n          </ion-fab-button>\\n      </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content padding>\\n  <ion-searchbar\\n  mode=\\\"ios\\\"\\n  show-cancel-button=\\\"true\\\"\\n  cancel-button-text=\\\"Cancelar\\\"\\n  (ionChange)=\\\"onSearch($event)\\\"\\n  autocomplete=\\\"off\\\"\\n  autocorrect=\\\"on\\\"\\n  animated=\\\"true\\\" \\n  spellcheck=\\\"true\\\"\\n  type=\\\"text\\\"\\n  ionBlur=\\\"\\\"\\n  placeholder=\\\"Buscar material\\\">\\n</ion-searchbar>\\n<div text-center *ngIf=\\\"showSpinner;\\\">\\n  <ion-spinner name=\\\"lines\\\"></ion-spinner>\\n</div>\\n\\n<div *ngIf=\\\"showListCategory;\\\">\\n    <div *ngIf=\\\"listAllCategories && listAllCategories.length > 0\\\">\\n        <ion-list *ngFor=\\\"let cat of listAllCategories\\\">\\n          \\n            <ion-item>\\n              <ion-label>\\n                {{ cat.category_name }} \\n              </ion-label>\\n                <ion-tab-button (click)=\\\"editCategory(cat)\\\">\\n                <ion-icon name=\\\"md-create\\\" color=\\\"danger\\\"></ion-icon>\\n                <ion-label color=\\\"dark\\\">Editar</ion-label>\\n                </ion-tab-button>\\n    \\n                <ion-tab-button (click)=\\\"deleteCategory(cat.idcategory)\\\">\\n                    <ion-icon name=\\\"md-trash\\\" color=\\\"danger\\\"></ion-icon>\\n                    <ion-label color=\\\"dark\\\">Eliminar</ion-label>\\n                </ion-tab-button>\\n            </ion-item>\\n        </ion-list>\\n</div>\\n </div>\\n <form *ngIf=\\\"showFormCategory;\\\" [formGroup]=\\\"registerCategoryForm\\\" (ngSubmit)=\\\"registerCategory()\\\">\\n\\n  <ion-item>\\n       <ion-icon name=\\\"md-document\\\"></ion-icon>\\n       <ion-label>Nombre</ion-label>\\n       <ion-input formControlName=\\\"categoryName\\\" autocomplete=\\\"off\\\" type=\\\"text\\\"></ion-input>\\n       <input type=\\\"hidden\\\" formControlName=\\\"idCategory\\\" >\\n  </ion-item>\\n\\n   <ion-item *ngIf=\\\"categoryName.hasError('required') && categoryName.touched\\\">\\n     <p>* El nombre de la categoria es requerido!</p>\\n   </ion-item>\\n   \\n   <ion-item>\\n    <ion-icon name=\\\"md-document\\\"></ion-icon>\\n    <ion-label>Estado</ion-label>\\n    <ion-input formControlName=\\\"categoryState\\\" autocomplete=\\\"off\\\" type=\\\"text\\\"></ion-input>\\n   \\n</ion-item>\\n\\n<ion-item *ngIf=\\\"categoryState.hasError('required') && categoryState.touched\\\">\\n  <p>* El estado de la categoria es requerido!</p>\\n</ion-item>\\n\\n   <br><br>\\n\\n   <br><br>\\n   <ion-button  *ngIf=\\\"btnRegister\\\" [disabled]=\\\"!registerCategoryForm.valid\\\" expand=\\\"block\\\" fill=\\\"solid\\\" color=\\\"danger\\\" type=\\\"submit\\\">\\n         <ion-label class=\\\"textcapitalize\\\">Acceptar</ion-label>\\n   </ion-button>\\n   <ion-button *ngIf=\\\"btnUpdate\\\" expand=\\\"block\\\" fill=\\\"solid\\\" color=\\\"danger\\\" type=\\\"submit\\\">\\n     <ion-label class=\\\"textcapitalize\\\">Editar</ion-label>\\n   </ion-button>\\n </form> \\n</ion-content>\\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL2NhdGVnb3J5L2NhdGVnb3J5LnBhZ2Uuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, AbstractControl, Validators } from '@angular/forms';\nimport { CategoryService } from '../../services/category.service';\n\n@Component({\n  selector: 'app-category',\n  templateUrl: './category.page.html',\n  styleUrls: ['./category.page.scss'],\n})\nexport class CategoryPage implements OnInit {\npublic registerCategoryForm: FormGroup\npublic showFormCategory=false\npublic showListCategory=false\npublic btnRegister=false\npublic btnUpdate=false\n\npublic listAllCategories:any\npublic showSpinner=false\n\n\n  public categoryName:AbstractControl\n  public categoryState:AbstractControl\n  constructor(private categoryservices: CategoryService,private formBuilder: FormBuilder) { this.registerCategoryForm = this.formBuilder.group({\n    idCategory: [''],\n    categoryName: ['', Validators.compose( [Validators.required, Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*')] )],\n    categoryState: ['', Validators.compose( [Validators.required, Validators.maxLength(20), Validators.pattern('[a-zA-Z ]*')] )],\n    \n  })\n\n  this.categoryName = this.registerCategoryForm.controls['categoryName']\n  this.categoryState = this.registerCategoryForm.controls['categoryState']\n }\n\n  ngOnInit() {\n    this.listCategory()\n  }\n\n  listCategory()\n  {\n    this.showSpinner = true\n    this.categoryservices.getCategories().subscribe((res:any) => {\n      this.showListCategory = true\n      this.listAllCategories = res\n      this.showSpinner = false\n   })\n\n  }\n\n  /* registerCategory()\n  {\n    this.showSpinner = true\n    if(this.registerCategoryForm.value.idCategory)\n    {\n      this.categoryservices.putCategory(this.registerCategoryForm.value)\n       .subscribe( (res:any) => {\n        this.listCategory()\n        this.showListCategory = true\n        this.showFormCategory = false\n        this.showSpinner = false\n        })\n    }\n    else\n    {\n     console.log(this.registerCategoryForm.value)\n      this.createCategory(this.registerCategoryForm.value)\n    }\n  }\n\n  async createCategory(data:any)\n  {\n    console.log(data);\n    await this.categoryservices.registerCategories(data)\n          .subscribe( (res:any) => {\n          this.listCategory()\n          this.showListCategory = true\n          this.showFormCategory = false\n          this.showSpinner = false\n    })\n  } */\n\n  addCategory()\n  {\n    this.resetForm(this.registerCategoryForm)\n    this.btnRegister = true\n    if(this.showFormCategory===false)\n    {\n      this.showListCategory = false\n      this.showFormCategory = true\n      this.btnUpdate = false\n    }\n    else\n    {\n      this.showListCategory = true\n      this.showFormCategory = false\n    }\n  }\n  resetForm(form: any)\n  {\n    if(form)\n    {\n      form.reset()\n    }\n  }\n  editCategory(category:any)\n  {\n  \n    this.showSpinner = true\n    this.showListCategory = false\n    this.showFormCategory = true\n    this.registerCategoryForm.setValue({ \n      idCategory:category.idcategory,\n      categoryName: category.category_name,\n      categoryState: category.category_state,\n    })\n    \n    this.showSpinner = false\n    this.btnUpdate = true\n    this.btnRegister = false\n  }\n\n}\n"],"sourceRoot":""}